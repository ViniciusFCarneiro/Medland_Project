# 1 - Consultas realizadas por um médico especifico em Agosto de 2023:
SELECT * FROM CONSULTAS 
WHERE ID_MEDICO = 2 AND (YEAR(DATA) = 2023 AND MONTH(DATA) = 8); 


# 2 - Pacientes que tiveram diagnóstico de COVID-19 em suas consultas:
SELECT C.ID_CONSULTA, C.ID_PACIENTE, P.NOME, C.DIAGNOSTICO, C.DATA
FROM CONSULTAS AS C
LEFT JOIN PACIENTES AS P ON C.ID_PACIENTE = P.ID_PACIENTE
WHERE C.DIAGNOSTICO LIKE '%COVID%';

# 3 - Quantidade de consultas de cada paciente + idade calculada:
SELECT C.ID_PACIENTE, P.NOME, P.SEXO, TIMESTAMPDIFF(YEAR, P.NASCIMENTO, CURDATE()) AS IDADE, COUNT(*) AS QTD_CONSULTAS
FROM CONSULTAS AS C
LEFT JOIN PACIENTES AS P ON C.ID_PACIENTE = P.ID_PACIENTE 
GROUP BY ID_PACIENTE
ORDER BY QTD_CONSULTAS DESC;

# 4 - Pacientes que possuem sangue tipo O- (doador universal) e idade menor que 35:
SELECT NOME, TELEFONE, EMAIL, TP_SANGUE, TIMESTAMPDIFF(YEAR, NASCIMENTO, CURDATE()) AS IDADE 
FROM PACIENTES 
HAVING TP_SANGUE = 'O-' AND IDADE < 35
ORDER BY IDADE;

# 5 - Pacientes com idade maior que 30 que ficaram internados mais de 5 dias:
SELECT I.ID_INTERNACAO, I.ENTRADA, C.ID_CONSULTA, C.DIAGNOSTICO, P.NOME, 
	DATEDIFF(SAIDA, ENTRADA) AS DIAS_INTERNADOS, 
	TIMESTAMPDIFF(YEAR, P.NASCIMENTO, CURDATE()) AS IDADE
FROM INTERNACOES AS I
LEFT JOIN CONSULTAS AS C ON I.ID_CONSULTA = C.ID_CONSULTA
LEFT JOIN PACIENTES AS P ON C.ID_PACIENTE = P.ID_PACIENTE
HAVING DIAS_INTERNADOS > 5 AND IDADE > 30
ORDER BY DIAS_INTERNADOS DESC, IDADE DESC;

# 6 - Quantidade de consultas de acordo com risco:
SELECT 
	COUNT(*) AS QTD_CONSULTAS,
	CASE 
		WHEN GRAU_RISCO = 1 THEN 'Não urgência'
		WHEN GRAU_RISCO = 2 THEN 'Pouco urgência'
		WHEN GRAU_RISCO = 3 THEN 'Urgência'
		WHEN GRAU_RISCO = 4 THEN 'Muita urgência'
		WHEN GRAU_RISCO = 5 THEN 'Emergência'
		ELSE 'Risco não fornecido'
	END AS RISCO
FROM CONSULTAS
GROUP BY RISCO
ORDER BY QTD_CONSULTAS;

# 7 - Quantidade de consultas realizadas por cada médico:
SELECT C.ID_MEDICO, M.NOME, M.ESPECIALIDADE, COUNT(*) AS QTD_CONSULTAS
FROM CONSULTAS AS C
INNER JOIN MEDICOS AS M ON C.ID_MEDICO = M.ID_MEDICO 
GROUP BY C.ID_MEDICO 
ORDER BY QTD_CONSULTAS DESC;

# 8 - Média de idade dos pacientes de acordo com quantidade de dias internados:
SELECT
	DATEDIFF(SAIDA, ENTRADA) AS DIAS_INTERNADOS, 
	ROUND(AVG(TIMESTAMPDIFF(YEAR, P.NASCIMENTO, CURDATE()))) AS MEDIA_IDADE
FROM INTERNACOES AS I
LEFT JOIN CONSULTAS AS C ON I.ID_CONSULTA = C.ID_CONSULTA
LEFT JOIN PACIENTES AS P ON C.ID_PACIENTE = P.ID_PACIENTE
GROUP BY DIAS_INTERNADOS
ORDER BY DIAS_INTERNADOS;

# 9 - Update de dados usando transação (Utilizar com cautela para não causar locks em tabelas e parar recursos do banco de dados).

# Select com where para visualizar o que queremos alterar:
SELECT * FROM PACIENTES
WHERE ID_PACIENTE = 54;

# Iniciando transação (MySQL vem com autocommit ligado):
START TRANSACTION;

# Setando colunas para mudar
UPDATE PACIENTES
SET TELEFONE = '(31)99153-5645', EMAIL = 'heitor@hotmail.com'
WHERE ID_PACIENTE = 54;

# Visualizando alteração:
SELECT * FROM PACIENTES
WHERE ID_PACIENTE = 54;

# Operação bem sucedida, confirmar com commit:
COMMIT;

# 10 - Criando view dos pacientes que fazem aniversário no mês atual (Ações de marketing como enviar e-mail para aniversariante, descontos, etc.)

# Criando a view:
CREATE VIEW ANIVERSARIOS AS
SELECT DAY(NASCIMENTO) AS DIA_ANIVERSARIO, NOME, TELEFONE, EMAIL, CIDADE, ESTADO 
FROM PACIENTES
WHERE MONTH(NASCIMENTO) = MONTH(CURDATE())
ORDER BY DIA_ANIVERSARIO;

# Consultando view:
SELECT * FROM ANIVERSARIOS;